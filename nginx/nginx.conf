# La directiva 'resolver' le dice a Nginx dónde encontrar el DNS interno de Docker/Railway.
# Esto permite que Nginx resuelva los nombres de los servicios ('app1', 'app2') en tiempo de ejecución,
# en lugar de fallar si los servicios de la aplicación aún no se han iniciado cuando Nginx arranca.
# El DNS de Railway gestionará esto automáticamente. Usamos '127.0.0.11' como un estándar de Docker que es robusto.
resolver 127.0.0.11 valid=10s;

server {
    listen 80;

    # Regla para la primera instancia
    location /instancia1/ {
        rewrite /instancia1/(.*) /$1 break;
        
        # Usamos una variable para el upstream. Esto obliga a Nginx a usar el 'resolver'
        # para encontrar la IP del servicio 'app1' en cada petición, evitando el error de arranque.
        set $upstream_app1 http://app1:8000;
        proxy_pass $upstream_app1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Regla para la segunda instancia
    location /instancia2/ {
        rewrite /instancia2/(.*) /$1 break;
        
        set $upstream_app2 http://app2:8000;
        proxy_pass $upstream_app2;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Página de bienvenida por defecto
    location / {
        return 200 'Proxy activo. Accede a /instancia1/ o /instancia2/.';
        add_header Content-Type text/plain;
    }
}